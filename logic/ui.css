@charset "UTF-8";

/*
 * General UI
 */
html {
    background-color: black;
    color: white;
    font-family: sans-serif;
}
#header h1, #toolbar, #toolbar .toolbar-button {
    display: inline-block;
}
#header h1 {
    font-variant: small-caps;
    text-shadow:#fc0 1px 0 10px;
    text-decoration: underline;
    margin-top: 0;
    margin-bottom: 5px;
}
#toolbar {
    margin-left: 10px;
}
#toolbar .toolbar-button {
    cursor: default;
    background-color: #444;
    border: 1px solid #222;
    transition: border-color 0.15s;
    border-radius: 3px;
    color: #ffffff;
    text-align: center;
    box-sizing: border-box;
    margin: 5px; /* fixme: needs to match component, should just be set there */
    text-shadow: 1px 1px 2px black;
    font-size: 0.8em;
    min-width: 50px;
    line-height: 2;
}
#toolbar .toolbar-button:hover {
    border: 1px solid #fff;
}

/*
 * Focus hint, see main.js.
 */
#focus-hint {
    pointer-events: none;
    display: none;
    position: absolute;
    z-index: 99;
    top: 75px;
    left: 50%;
    margin-left: -400px;
    width: 800px;
    padding: 10px;
    text-align: center;
    font-size: 1.5em;
    font-weight: bold;
    border: 3px solid red;
    background: maroon;
    opacity: 0.0;
    border-radius: 10px;
    transition: opacity 0.5s;
}
body.focus-changing #focus-hint {
    display: block;
}
body.no-focus #focus-hint {
    display: block;
    opacity: 0.3;
}

/*
 * Grid
 */
.grid {
    /*background-image: radial-gradient(circle, #888 1px, #000 1px);  in JS to avoid looking to bright on low zoom */
    position: relative;
    overflow: hidden;
    width: 100%;
    height: 100%;
    background-color: black;
    background-image: radial-gradient(circle, #888 1px, #000 1px);
}
.grid.grid-zoom-100 {
    background-image: radial-gradient(circle, #444 1px, #000 1px);
}
.grid.grid-zoom-50 {
    background-image: radial-gradient(circle, #444 1px, #000 1px);
}
.grid.grid-zoom-175 {
    background-image: radial-gradient(circle, #aaa 1px, #000 1px);
}
.grid-status {
    z-index: 20;
    position: absolute;
    bottom: 0;
    right: 0;
    padding: 5px;
    background-color: #00000038;
    border: 1px solid #4444448a;
    border-radius: 3px;
    opacity: 1;
    transition: opacity 0.5s;
}
.grid-status.grid-status-faded {
    opacity: 0;
}
.grid-status i {
    color: #bbb;
    font-weight: bold;
}
.grid-status i::before {
    content: '»';
    font-weight: normal;
    vertical-align: text-bottom;
}
.grid-status i::after {
    content: '«';
    font-weight: normal;
    vertical-align: text-bottom;
}

/*
 * component
 */
.component {
    z-index: 11;
    position: absolute;
    background-color: transparent;
    cursor: default;
    box-sizing: border-box;
}
.component-drop-preview {
    z-index: 9;
    position: absolute;
    border-radius: 8px;
    outline: 2px solid #444;
    outline-offset: -4px;
}
.component-rotate-animation {
    transition: transform 0.15s;
    transform: rotate(90deg);
}
.component-rotate-animation span {
    display: block;
    transition: transform 0.15s;
    transform: rotate(-90deg);
}
.component-inner {
    z-index: 12;
    position: absolute;
    background-color: #444;
    border: 1px solid #222;
    transition: border-color 0.15s;
    border-radius: 3px;
    color: #ffffff;
    text-align: center;
    box-sizing: border-box;
    margin: 5px; /* fixme: needs to match component, should just be set there */
    width: calc(100% - 10px);
    height: calc(100% - 10px);
    overflow: hidden;
    text-shadow: 1px 1px 2px black;
    font-size: 0.8em;
}
.component-inner:hover {
    border: 1px solid #fff;
}
.component-port {
    z-index: 14;
    position: absolute;
    background-color: #6d6d6d;
    border-radius: 3px;
    font-size: 0.8em;
    text-align: center;
    color: #ddd;
    border: 1px solid #222;
    box-sizing: border-box;
}
.grid-zoom-below-100 .component-port {
    border-radius: 0;
}
.grid-zoom-below-85 .component-port span {
    display: none;
}
.component-port:hover {
    background-color: #aaa;
    transition: background-color 0.15s, color 0.15s;
    color: #000;
}
.component-port-label {
    pointer-events: none;
    z-index: 13;
    position: absolute;
    white-space: nowrap;
    background-color: #00000038;
    border: 1px solid #4444448a;
    border-radius: 3px;
    box-sizing: border-box;
    color: #ccc;
    opacity: 0;
    transition: opacity 0.15s;
}
.grid-zoom-below-125 .component-port-label {
    display: none;
}
.component:hover .component-port-label {
    opacity: 1;
}

/*
 * connection
 */
.connection-h, .connection-v {
    z-index: 10;
    position: absolute;
    box-sizing: border-box;
}
/* extends clickable area around connections */
.connection-h::after, .connection-v::after {
    content: '';
    position: absolute;
    inset-block: -4px;
    inset-inline: -4px;
}
.grid-zoom-above-100 .connection-h::after, .grid-zoom-above-100 .connection-v::after {
    inset-block: -8px;
    inset-inline: -8px;
}
/* colors */
.connection-color-0 {
    background-color: rgb(76, 136, 76);
}
.connection-color-1 {
    background-color: rgb(120, 136, 76);
}
.connection-color-2 {
    background-color: rgb(136, 115, 76);
}
.connection-color-3 {
    background-color: rgb(136, 95, 76);
}
.connection-color-4 {
    background-color: rgb(136, 76, 76);
}
.connection-color-5 {
    background-color: rgb(136, 76, 111);
}
.connection-color-6 {
    background-color: rgb(112, 76, 136);
}
.connection-color-7 {
    background-color: rgb(87, 76, 136);
}
.connection-color-8 {
    background-color: rgb(76, 100, 136);
}
.connection-color-9 {
    background-color: rgb(76, 136, 133);
}
/* connection debugging */
.connection-debug {
    pointer-events: none;
    z-index: 11;
    position: absolute;
    box-sizing: border-box;
    border: 1px solid grey;
    border-top-color: red;
    border-bottom-color: green;
    border-left-color: orange;
    border-right-color: turquoise;
    opacity: 0.5;
}
.connection-debug span {
    pointer-events: none;
    z-index: 11;
    display: block;
    position: absolute;
    left: 50%;
    top: 50%;
    width: 300px;
    height: 40px;
    margin-left: -150px;
    margin-top: -20px;
    text-align: center;
}
.connection-debug-point {
    pointer-events: none;
    z-index: 11;
    display: block;
    position: absolute;
}
.connection-debug-point0::after {
    content: '0';
}
.connection-debug-point1::after {
    content: '1';
}
.connection-debug-point2::after {
    content: '2';
}